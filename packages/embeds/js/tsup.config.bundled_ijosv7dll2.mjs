// tsup.config.ts
import { solidPlugin } from "esbuild-plugin-solid";
import { defineConfig } from "tsup";

// package.json
var version = "0.3.86";

// tsup.config.ts
var tsup_config_default = defineConfig((options) => [
  {
    entry: ["src/index.ts"],
    minify: !options.watch,
    format: "esm",
    platform: "browser",
    dts: true
  },
  {
    entry: ["src/web.ts"],
    minify: !options.watch,
    format: "esm",
    platform: "browser",
    loader: {
      ".css": "text"
    },
    banner: {
      js: `// v${version}`
    },
    esbuildPlugins: [solidPlugin()]
  }
]);
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiLCAicGFja2FnZS5qc29uIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIi9Vc2Vycy9wYWJsby93b3Jrc3BhY2UvdGVjcGV0L2JvdGZsb3cvcGFja2FnZXMvZW1iZWRzL2pzL3RzdXAuY29uZmlnLnRzXCI7Y29uc3QgX19pbmplY3RlZF9kaXJuYW1lX18gPSBcIi9Vc2Vycy9wYWJsby93b3Jrc3BhY2UvdGVjcGV0L2JvdGZsb3cvcGFja2FnZXMvZW1iZWRzL2pzXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9Vc2Vycy9wYWJsby93b3Jrc3BhY2UvdGVjcGV0L2JvdGZsb3cvcGFja2FnZXMvZW1iZWRzL2pzL3RzdXAuY29uZmlnLnRzXCI7aW1wb3J0IHsgc29saWRQbHVnaW4gfSBmcm9tIFwiZXNidWlsZC1wbHVnaW4tc29saWRcIjtcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ0c3VwXCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4vcGFja2FnZS5qc29uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZygob3B0aW9ucykgPT4gW1xuICB7XG4gICAgZW50cnk6IFtcInNyYy9pbmRleC50c1wiXSxcbiAgICBtaW5pZnk6ICFvcHRpb25zLndhdGNoLFxuICAgIGZvcm1hdDogXCJlc21cIixcbiAgICBwbGF0Zm9ybTogXCJicm93c2VyXCIsXG4gICAgZHRzOiB0cnVlLFxuICB9LFxuICB7XG4gICAgZW50cnk6IFtcInNyYy93ZWIudHNcIl0sXG4gICAgbWluaWZ5OiAhb3B0aW9ucy53YXRjaCxcbiAgICBmb3JtYXQ6IFwiZXNtXCIsXG4gICAgcGxhdGZvcm06IFwiYnJvd3NlclwiLFxuICAgIGxvYWRlcjoge1xuICAgICAgXCIuY3NzXCI6IFwidGV4dFwiLFxuICAgIH0sXG4gICAgYmFubmVyOiB7XG4gICAgICBqczogYC8vIHYke3ZlcnNpb259YCxcbiAgICB9LFxuICAgIGVzYnVpbGRQbHVnaW5zOiBbc29saWRQbHVnaW4oKV0sXG4gIH0sXG5dKTtcbiIsICJ7XG4gIFwibmFtZVwiOiBcIkB0eXBlYm90LmlvL2pzXCIsXG4gIFwidmVyc2lvblwiOiBcIjAuMy44NlwiLFxuICBcImRlc2NyaXB0aW9uXCI6IFwiSmF2YXNjcmlwdCBsaWJyYXJ5IHRvIGRpc3BsYXkgdHlwZWJvdHMgb24geW91ciB3ZWJzaXRlXCIsXG4gIFwibGljZW5zZVwiOiBcIkZTTC0xLjEtQUx2MlwiLFxuICBcInR5cGVcIjogXCJtb2R1bGVcIixcbiAgXCJtYWluXCI6IFwiLi9kaXN0L2luZGV4LmpzXCIsXG4gIFwidHlwZXNcIjogXCIuL2Rpc3QvaW5kZXguZC50c1wiLFxuICBcImV4cG9ydHNcIjoge1xuICAgIFwiLlwiOiBcIi4vZGlzdC9pbmRleC5qc1wiLFxuICAgIFwiLi93ZWJcIjogXCIuL2Rpc3Qvd2ViLmpzXCJcbiAgfSxcbiAgXCJzY3JpcHRzXCI6IHtcbiAgICBcImRldlwiOiBcInRzdXAgLS13YXRjaFwiLFxuICAgIFwiYnVpbGRcIjogXCJ0c3VwXCJcbiAgfSxcbiAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQGFpLXNkay91aS11dGlsc1wiOiBcIjEuMi4yXCIsXG4gICAgXCJAYXJrLXVpL3NvbGlkXCI6IFwiNS4wLjBcIixcbiAgICBcIkBmaXgtd2VibS1kdXJhdGlvbi9maXhcIjogXCIxLjAuMVwiLFxuICAgIFwiQHN0cmlwZS9zdHJpcGUtanNcIjogXCIxLjU0LjFcIixcbiAgICBcImRvbXB1cmlmeVwiOiBcIjMuMi40XCIsXG4gICAgXCJreVwiOiBcIjEuMi40XCIsXG4gICAgXCJtYXJrZWRcIjogXCI5LjAuM1wiLFxuICAgIFwicGFydHlzb2NrZXRcIjogXCIxLjAuMlwiLFxuICAgIFwic29saWQtZWxlbWVudFwiOiBcIjEuOS4xXCIsXG4gICAgXCJzb2xpZC1qc1wiOiBcIjEuOS41XCIsXG4gICAgXCJAdHlwZWJvdC5pby9ibG9ja3MtYnViYmxlc1wiOiBcIndvcmtzcGFjZToqXCIsXG4gICAgXCJAdHlwZWJvdC5pby9ibG9ja3MtaW5wdXRzXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL2Jsb2Nrcy1sb2dpY1wiOiBcIndvcmtzcGFjZToqXCIsXG4gICAgXCJAdHlwZWJvdC5pby9ibG9ja3MtaW50ZWdyYXRpb25zXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL2NoYXQtYXBpXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL2VudlwiOiBcIndvcmtzcGFjZToqXCIsXG4gICAgXCJAdHlwZWJvdC5pby9saWJcIjogXCJ3b3Jrc3BhY2U6KlwiLFxuICAgIFwiQHR5cGVib3QuaW8vcmljaC10ZXh0XCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL3NldHRpbmdzXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL3VpXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL3RoZW1lXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL3RzY29uZmlnXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlYm90LmlvL3plbmRlc2stYmxvY2tcIjogXCJ3b3Jrc3BhY2U6KlwiLFxuICAgIFwiQHR5cGVib3QuaW8vc2NoZW1hc1wiOiBcIndvcmtzcGFjZToqXCIsXG4gICAgXCJAdHlwZWJvdC5pby9sb2dzXCI6IFwid29ya3NwYWNlOipcIixcbiAgICBcIkB0eXBlcy9kb21wdXJpZnlcIjogXCIzLjIuMFwiLFxuICAgIFwiYXV0b3ByZWZpeGVyXCI6IFwiMTAuNC4yMFwiLFxuICAgIFwiZXNidWlsZC1wbHVnaW4tc29saWRcIjogXCJeMC42LjBcIixcbiAgICBcInBvc3Rjc3NcIjogXCI4LjUuM1wiLFxuICAgIFwidGFpbHdpbmRjc3NcIjogXCIzLjQuMTdcIixcbiAgICBcInRzdXBcIjogXCI4LjMuMFwiXG4gIH0sXG4gIFwicHVibGlzaENvbmZpZ1wiOiB7XG4gICAgXCJhY2Nlc3NcIjogXCJwdWJsaWNcIlxuICB9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQXNULFNBQVMsbUJBQW1CO0FBQ2xWLFNBQVMsb0JBQW9COzs7QUNDM0IsY0FBVzs7O0FERWIsSUFBTyxzQkFBUSxhQUFhLENBQUMsWUFBWTtBQUFBLEVBQ3ZDO0FBQUEsSUFDRSxPQUFPLENBQUMsY0FBYztBQUFBLElBQ3RCLFFBQVEsQ0FBQyxRQUFRO0FBQUEsSUFDakIsUUFBUTtBQUFBLElBQ1IsVUFBVTtBQUFBLElBQ1YsS0FBSztBQUFBLEVBQ1A7QUFBQSxFQUNBO0FBQUEsSUFDRSxPQUFPLENBQUMsWUFBWTtBQUFBLElBQ3BCLFFBQVEsQ0FBQyxRQUFRO0FBQUEsSUFDakIsUUFBUTtBQUFBLElBQ1IsVUFBVTtBQUFBLElBQ1YsUUFBUTtBQUFBLE1BQ04sUUFBUTtBQUFBLElBQ1Y7QUFBQSxJQUNBLFFBQVE7QUFBQSxNQUNOLElBQUksT0FBTyxPQUFPO0FBQUEsSUFDcEI7QUFBQSxJQUNBLGdCQUFnQixDQUFDLFlBQVksQ0FBQztBQUFBLEVBQ2hDO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
